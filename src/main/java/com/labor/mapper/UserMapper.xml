<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.labor.mapper.UserMapper">




    <insert id="inertNewUser">
        INSERT INTO t_user (`name`, `certificate_type`, `certificate_number`, `gender`, `nation`, `birthday`, `address`, `project_id`, `company_id`, `goup_id`, `work_type_id`, `user_type`,`att_group_id`, `is_sick`, `phone`, `card_number`, `is_contract`, `head_img_id`, `contract_file_id`, `work_age`, `work_certificate`, `health`, `danger_operate`, `irregular_record`, `criticism`,`age`, `absence_work`, `creater`, `create_at`, `update_at`, native_Place)
         VALUES (#{name}, #{certificateType}, #{certificateNumber}, #{gender}, #{nation}, #{birthday}, #{address}, #{projectID}, #{companyID}, #{goupID}, #{workTypeId}, #{userType},#{attGroupId}, #{isSick}, #{phone}, #{cardNumber}, #{isContract}, #{headImgId}, #{contractFileId}, #{workAge}, #{workCertificate}, #{health}, #{dangerOperate}, #{irregularRecord}, #{criticism}, #{age}, #{absenceWork}, #{creater}, NOW(), NOW(),#{nativePlace});
    </insert>


    <select id="getRecordsByCardNumber" resultType="java.lang.Integer">
        select count(1) from t_user where certificate_type = #{certificate_type} and certificate_number = #{certificate_number}
    </select>

    <delete id="deleteUserByID">
        delete from t_user where id = #{ID}
    </delete>

    <select id="getSubcontractList" resultType="com.labor.entity.Subcontract">
        select id,company_name from t_subcontract
    </select>

    <select id="getCount" resultType="java.lang.Integer">
        select count(*) from (
        SELECT t.id, t.name,t.age, t.certificate_type, t.certificate_number, t.gender, t.nation, t.birthday, t.address, t.project_id, t.company_id, t.goup_id, t.work_type_id,t.att_group_id, p.project_name, s.company_name, g.group_name, w.work_type_name,
        t.user_type, t.is_sick, t.phone, t.card_number, t.is_contract, t.head_img_id, t.contract_file_id, t.work_age, t.work_certificate, t.health,
        t.danger_operate, t.irregular_record, t.criticism, t.absence_work, t.creater, t.create_at, t.update_at,
        a1.file_name headName,a1.save_path headPath,a2.file_name fileName,a2.save_path filePath
        FROM t_user t
        LEFT JOIN t_project p ON t.project_id = p.project_id
        LEFT JOIN t_subcontract s ON t.company_id = s.id
        LEFT JOIN t_group g ON t.goup_id = g.id
        LEFT JOIN t_work_type w ON t.work_type_id = w.id
        LEFT JOIN t_attachment_log a1 ON t.head_img_id =a1.id
        LEFT JOIN t_attachment_log a2 ON t.contract_file_id =a2.id
        where 1 = 1
        <if test="queryParams.name != null and queryParams.name != ''">
            and UPPER(t.name) like UPPER(CONCAT('%',#{queryParams.name,jdbcType=VARCHAR}, '%'))
        </if>
        <if test="queryParams.certificateNumber != null and queryParams.certificateNumber != ''">
            and t.certificate_number = #{queryParams.certificateNumber,jdbcType=INTEGER}
        </if>
        <if test="queryParams.phone != null and queryParams.phone != ''">
            and UPPER(t.phone) like UPPER(CONCAT('%',#{queryParams.phone}, '%'))
        </if>
        <if test="queryParams.goupID != null and queryParams.goupID != ''">
            and t.goup_id=#{queryParams.goupID}
        </if>
        <if test="queryParams.workTypeId != null and queryParams.workTypeId != ''">
            and t.work_type_id=#{queryParams.workType}
        </if>
        ) t
    </select>

    <select id="getPage" resultType="com.labor.entity.User">
        SELECT t.id, t.name,t.age, t.certificate_type, t.certificate_number, t.gender, t.nation, t.birthday, t.address, t.project_id, t.company_id, t.goup_id, t.work_type_id,att_group_id, p.project_name, s.company_name, g.group_name, w.work_type_name,
        t.user_type, t.is_sick, t.phone, t.card_number, t.is_contract, t.contract_file_id, t.head_img_id, t.work_age, t.work_certificate, t.health,
        t.danger_operate, t.irregular_record, t.criticism, t.absence_work, t.creater, t.create_at, t.update_at,
        a1.file_name headName,a1.save_path headPath,a2.file_name fileName,a2.save_path filePath
        FROM t_user t
        LEFT JOIN t_project p ON t.project_id = p.project_id
        LEFT JOIN t_subcontract s ON t.company_id = s.id
        LEFT JOIN t_group g ON t.goup_id = g.id
        LEFT JOIN t_work_type w ON t.work_type_id = w.id
        LEFT JOIN t_attachment_log a1 ON t.head_img_id =a1.id
        LEFT JOIN t_attachment_log a2 ON t.contract_file_id =a2.id
        where 1 = 1
        <if test="queryParams.name != null and queryParams.name != ''">
            and UPPER(t.name) like UPPER(CONCAT('%',#{queryParams.name,jdbcType=VARCHAR}, '%'))
        </if>
        <if test="queryParams.certificateNumber != null and queryParams.certificateNumber != ''">
            and t.certificate_number = #{queryParams.certificateNumber,jdbcType=INTEGER}
        </if>
        <if test="queryParams.phone != null and queryParams.phone != ''">
            and UPPER(t.phone) like UPPER(CONCAT('%',#{queryParams.phone}, '%'))
        </if>
        <if test="queryParams.goupID != null and queryParams.goupID != ''">
            and t.goup_id=#{queryParams.goupID}
        </if>
        <if test="queryParams.workTypeId != null and queryParams.workTypeId != ''">
            and t.work_type_id=#{queryParams.workType}
        </if>
        order by ID desc
        limit #{queryParams.page,jdbcType=INTEGER},#{queryParams.size,jdbcType=INTEGER}
    </select>

    <select id="getMonitorList" resultType="com.labor.entity.User">
          SELECT * FROM t_user WHERE user_type = 1
    </select>

    <select id="getUserUnassigned" resultType="com.labor.entity.User">
          SELECT * FROM t_user WHERE  ISNULL(goup_id)
    </select>

    <update id="updateUser">
        UPDATE t_user SET NAME = #{name}, nation = #{nation}, gender = #{gender},age = #{age},birthday  = STR_TO_DATE(#{birthday},'%Y-%m-%d %H:%i:%s'),
        certificate_number = #{certificateNumber},native_Place = #{nativePlace}, address = #{address},project_id = #{projectID},
        company_id = #{companyID}, goup_id = #{goupID},user_type = #{userType},work_type_id = #{workTypeId},user_type = #{userType},contract_file_id = #{contractFileId},head_img_id=#{headImgId},work_age=#{workAge},
        att_group_id = #{attGroupId},is_contract = #{isContract},approach_status = #{approachStatus},phone = #{phone},update_at = NOW()
        WHERE id = #{ID}
    </update>
    <select id="findUserById" resultType="com.labor.entity.User">
        SELECT t.id, t.name,t.age, t.certificate_type, t.certificate_number, t.gender, t.nation, t.birthday, t.address, t.project_id, t.company_id, t.goup_id, t.work_type_id,t.att_group_id, p.project_name, s.company_name, g.group_name, w.work_type_name,
        t.user_type, t.is_sick, t.phone, t.card_number, t.is_contract, t.contract_file_id, t.head_img_id, t.work_age, t.work_certificate, t.health,
        t.danger_operate, t.irregular_record, t.criticism, t.absence_work, t.creater, t.create_at, t.update_at,
        a1.file_name headName,a1.save_path headPath,a2.file_name fileName,a2.save_path filePath
        FROM t_user t
        LEFT JOIN t_project p ON t.project_id = p.project_id
        LEFT JOIN t_subcontract s ON t.company_id = s.id
        LEFT JOIN t_group g ON t.goup_id = g.id
        LEFT JOIN t_attachment_log a1 ON t.head_img_id =a1.id
        LEFT JOIN t_attachment_log a2 ON t.contract_file_id =a2.id
        LEFT JOIN t_work_type w ON t.work_type_id = w.id where t.id=#{ID}
    </select>

    <select id="getWorkType" resultType="com.labor.entity.WorkType">
        select id,work_type_name from t_work_type
    </select>

    <select id="getProjectList" resultType="com.labor.entity.Project">
        select project_id,project_name,company_id from t_project
    </select>

    <select id="getUserForWorkType" resultType="com.labor.entity.UserForWorkType">
        select u.id as userID,u.name as userName from t_user u WHERE ISNULL(u.goup_id) and u.work_type_id = #{workTypeID}
    </select>

</mapper>
