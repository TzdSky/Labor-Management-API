<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.labor.mapper.UserMapper">


    <select id="getUserList" resultType="com.labor.entity.User">
        select t.id, t.name, t.certificate_type, t.certificate_number, t.gender, t.nation, t.birthday, t.address, t.project_id, t.company_id, t.goup_id, t.work_type_id, p.project_name, s.company_name, g.group_name, w.work_type_name,
        t.user_type, t.is_sick, t.phone, t.card_number, t.is_contract, t.contract_name, t.contract_number, t.work_age, t.work_certificate, t.health,
        t.danger_operate, t.irregular_record, t.criticism, t.absence_work, t.creater, t.create_at, t.update_at
        from t_user t, t_project p, t_subcontract s, t_group g, t_work_type w
        where t.project_id = p.project_id
        and t.company_id = s.id
        and t.goup_id = g.id
        and t.work_type_id = w.id
        <if test="name!=''and name!=null">
            and t.name like CONCAT('%',#{name},'%')
        </if>
        <if test="certificateNumber!=''and certificateNumber!=0">
            and t.certificate_number like CONCAT('%',#{certificateNumber},'%')
        </if>
        <if test="phone!=''and phone!=0">
            and t.phone like CONCAT('%',#{phone},'%')
        </if>
        <if test="goupID!=''and goupID!=nul">
            and t.goup_id = #{goupID}
        </if>
        <if test="workType!=''and workType!=null">
            and t.work_type = #{workType}
        </if>
        order by t.create_at desc
    </select>

    <insert id="inertNewUser">
        INSERT INTO t_user (`name`, `certificate_type`, `certificate_number`, `gender`, `nation`, `birthday`, `address`, `project_id`, `company_id`, `goup_id`, `work_type`, `user_type`, `is_sick`, `phone`, `card_number`, `is_contract`, `contract_name`, `contract_number`, `work_age`, `work_certificate`, `health`, `danger_operate`, `irregular_record`, `criticism`, `absence_work`, `creater`, `create_at`, `update_at`)
         VALUES (#{name}, #{certificateType}, #{certificateNumber}, #{gender}, #{nation}, #{birthday}, #{address}, #{projectID}, #{companyId}, #{goupId}, #{workType}, #{userType}, #{isSick}, #{phone}, #{cardNumber}, #{isContract}, #{contractName}, #{contractNumber}, #{workAge}, #{workCertificate}, #{health}, #{dangerOperate}, #{irregularRecord}, #{criticism}, #{absenceWork}, #{creater}, #{createAt}, #{updateAt});
    </insert>


    <select id="getRecordsByCardNumber" resultType="java.lang.Integer">
        select count(1) from t_user where certificate_type = #{certificate_type} and certificate_number = #{certificate_number}
    </select>

    <delete id="deleteUserByID">
        delete from t_user where ID = #{id}
    </delete>

    <select id="getSubcontractList" resultType="com.labor.entity.Subcontract">
        select id,company_name from t_subcontract
    </select>

    <select id="getCount" resultType="java.lang.Integer">
        select count(t.ID) from (
        select id, `name`, `certificate_type`, `certificate_number`, `gender`, `nation`, `birthday`, `address`, `project_name`, `company`, `goup_name`, `work_type`, `user_type`, `is_sick`, `phone`, `card_number`, `is_contract`, `contract_name`, `contract_number`, `work_age`, `work_certificate`, `health`, `danger_operate`, `irregular_record`, `criticism`, `absence_work`, `creater`, `create_at`, `update_at`
        from t_user where 1 = 1
        <if test="queryParams.name != null and queryParams.name != ''">
            and UPPER(name) like UPPER(CONCAT('%',#{queryParams.name,jdbcType=VARCHAR}, '%'))
        </if>
        <if test="queryParams.certificateNumber != 0 and queryParams.certificateNumber != ''">
            and certificate_number = #{queryParams.certificateNumber,jdbcType=INTEGER}
        </if>
        <if test="queryParams.phone != 0 and queryParams.phone != ''">
            and phone = #{queryParams.phone,jdbcType=INTEGER}
        </if>
        <if test="queryParams.groupName != null and queryParams.groupName != ''">
            and UPPER(goup_name) like UPPER(CONCAT('%',#{queryParams.groupName,jdbcType=VARCHAR}, '%'))
        </if>
        <if test="queryParams.workType != null and queryParams.workType != ''">
            and UPPER(work_type) like UPPER(CONCAT('%',#{queryParams.workType,jdbcType=VARCHAR}, '%'))
        </if>
        ) t
    </select>

    <select id="getPage" resultType="com.labor.entity.User">
        select id,`name`, `certificate_type`, `certificate_number`, `gender`, `nation`, `birthday`, `address`, `project_name`, `company`, `goup_name`, `work_type`, `user_type`, `is_sick`, `phone`, `card_number`, `is_contract`, `contract_name`, `contract_number`, `work_age`, `work_certificate`, `health`, `danger_operate`, `irregular_record`, `criticism`, `absence_work`, `creater`, `create_at`, `update_at`
        from t_user where 1 = 1
        <if test="queryParams.name != null and queryParams.name != ''">
            and UPPER(name) like UPPER(CONCAT('%',#{queryParams.name,jdbcType=VARCHAR}, '%'))
        </if>
        <if test="queryParams.certificateNumber != null and queryParams.certificateNumber != ''">
            and certificate_number = #{queryParams.certificateNumber,jdbcType=INTEGER}
        </if>
        <if test="queryParams.phone != null and queryParams.phone != ''">
            and phone = #{queryParams.phone,jdbcType=INTEGER}
        </if>
        <if test="queryParams.groupName != null and queryParams.groupName != ''">
            and UPPER(goup_name) like UPPER(CONCAT('%',#{queryParams.groupName,jdbcType=VARCHAR}, '%'))
        </if>
        <if test="queryParams.workType != null and queryParams.workType != ''">
            and UPPER(work_type) like UPPER(CONCAT('%',#{queryParams.workType,jdbcType=VARCHAR}, '%'))
        </if>
        order by ID desc
        limit #{queryParams.page,jdbcType=INTEGER},#{queryParams.size,jdbcType=INTEGER}
    </select>
</mapper>
