<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.labor.mapper.UserMapper">


    <select id="getUserList" resultType="com.labor.entity.User">
        select * FROM t_user t where 1=1
        <if test="name!=''and name!=null">
            and t.name like CONCAT('%',#{name},'%')
        </if>
        <if test="certificateNumber!=''and certificateNumber!=0">
            and t.certificate_number like CONCAT('%',#{certificateNumber},'%')
        </if>
        <if test="phone!=''and phone!=0">
            and t.phone like CONCAT('%',#{phone},'%')
        </if>
        <if test="groupName!=''and groupName!=nul">
            and t.group_name = #{groupName}
        </if>
        <if test="workType!=''and workType!=null">
            and t.work_type = #{workType}
        </if>
        order by t.create_at desc
    </select>

    <insert id="inertNewUser">
        INSERT INTO t_user (`name`, `certificate_type`, `certificate_number`, `gender`, `nation`, `birthday`, `address`, `project_name`, `company`, `goup_name`, `work_type`, `user_type`, `is_sick`, `phone`, `card_number`, `is_contract`, `contract_name`, `contract_number`, `work_age`, `work_certificate`, `health`, `danger_operate`, `irregular_record`, `criticism`, `absence_work`, `creater`, `create_at`, `update_at`)
         VALUES (#{name}, #{certificateType}, #{certificateNumber}, #{gender}, #{nation}, #{birthday}, #{address}, #{projectName}, #{company}, #{goupName}, #{workType}, #{userType}, #{isSick}, #{phone}, #{cardNumber}, #{isContract}, #{contractName}, #{contractNumber}, #{workAge}, #{workCertificate}, #{health}, #{dangerOperate}, #{irregularRecord}, #{criticism}, #{absenceWork}, #{creater}, #{createAt}, #{updateAt});
    </insert>


    <select id="getRecordsByCardNumber" resultType="java.lang.Integer">
        select count(1) from t_user where certificate_type = #{certificate_type} and certificate_number = #{certificate_number}
    </select>

    <delete id="deleteUserByID">
        delete from t_user where ID = #{id}
    </delete>
</mapper>
